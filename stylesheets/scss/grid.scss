// -----------------------------------------------------------------------------
// Semantic.gs // for SCSS: http://sass-lang.com/
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// DEFAULTS
// -----------------------------------------------------------------------------
// Set $total-width to 100% for a fluid layout
// -----------------------------------------------------------------------------
$column-width: 			60px	!default;
$gutter-width: 			20px	!default;
$columns: 					12		!default;
$gridsystem-width: 	($column-width * $columns) + ($gutter-width * $columns);
$total-width: 			$gridsystem-width	!default;

// -----------------------------------------------------------------------------
// Uncomment these two lines and the star-hack width/margin lines
// below to enable sub-pixel fix for IE6 & 7.
// See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// -----------------------------------------------------------------------------
// $min-width: 999999;
// $correction: 0.5 / $min-width * 100;

// -----------------------------------------------------------------------------
// PLACEHOLDERS > CLEARFIX
// -----------------------------------------------------------------------------
// The micro clearfix
// http://nicolasgallagher.com/micro-clearfix-hack/
// -----------------------------------------------------------------------------
%clearfix {
	*zoom:1;

	&:before,
	&:after {
    content:"";
    display:table;
	}
	&:after {
    clear:both;
	}
}

// -----------------------------------------------------------------------------
// PLACEHOLDERS > ROW
// -----------------------------------------------------------------------------
%row {
	display: block;
}

// -----------------------------------------------------------------------------
// PLACEHOLDERS > COLUMN
// -----------------------------------------------------------------------------
%column {
	display: inline;
	float: left;
}

// -----------------------------------------------------------------------------
// GRID
// -----------------------------------------------------------------------------
body {
	width: 100%;
	@extend %clearfix;

	@for $i from 1 through $columns {
		$pushpull: $total-width*((($gutter-width+$column-width)*$i) / $gridsystem-width) + $total-width*(($gutter-width*.5)/$gridsystem-width);

		&%push-#{$i} {
			margin-left: $pushpull;
		}

		&%pull-#{$i} {
			margin-right: $pushpull;
		}

		&%row-#{$i} {
			$width: $total-width*(($gutter-width + $gridsystem-width)/$gridsystem-width);
			$margin: $total-width*((($gutter-width*.5)/$gridsystem-width)*-1);

			width: $width;
			margin: 0 $margin;
			// *width: $width-$correction;
			// *margin: 0 $margin-$correction;
		}

		@for $j from 1 through $columns {
			&%column-#{$i}-#{$j} {
				$width: $total-width*(((($gutter-width+$column-width)*$i)-$gutter-width) / $gridsystem-width);
				$margin: $total-width*(($gutter-width*.5)/$gridsystem-width);

				width: $width;
				margin: 0 $margin;
				// *width: $width-$correction;
				// *margin: 0 $margin-$correction;
			}
		}
	}
}

@mixin row($columns:$columns) {
	@extend %row, body%row-#{$columns}, %clearfix;
}

@mixin column($x,$columns:$columns) {
	@extend %column, body%column-#{$x}-#{$columns};
}

@mixin push($offset:1) {
	@extend %push-#{$offset};
}

@mixin pull($offset:1) {
	@extend %pull-#{$offset};
}